apply plugin: 'com.android.library'
apply from: 'config.gradle'

android {
    compileSdkVersion project.ext.android.compileSdkVersion
    buildToolsVersion project.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion project.ext.android.defconfig.minSdkVersion
        targetSdkVersion project.ext.android.defconfig.targetSdkVersion

        versionCode project.ext.android.defconfig.versionCode
        versionName project.ext.android.defconfig.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // To deal with:
        // java.lang.RuntimeException:
        // Unable to get provider android.support.v4.content.FileProvider:
        // java.lang.ClassNotFoundException: android.support.v4.content.FileProvider
        multiDexEnabled project.ext.android.defconfig.multiDexEnabled


        // version "16.1.4479499" -> may be
        ndk project.ext.android.defconfig.ndk

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14", "-fno-exceptions", "-O2"
            }
        }

        // This block is different from the one you use to link Gradle
        // to your CMake or ndk-build script.
        externalNativeBuild {

            // For ndk-build, instead use the ndkBuild block.
            cmake {

                // Passes optional arguments to CMake.
                arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"

                // Sets a flag to enable format macro constants for the C compiler.
                cFlags "-D__STDC_FORMAT_MACROS"

                // Sets optional flags for the C++ compiler.
                cppFlags "-fexceptions", "-frtti"
            }
        }

    }


    libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${rootProject.name}_${defaultConfig.versionName}.aar"
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    testImplementation project.ext.dependencies.test.junit
    androidTestImplementation project.ext.androidx.test.extjunit
    androidTestImplementation project.ext.androidx.test.espressocore

    // noinspection GradleCompatible
    // implementation project.ext.android.support.appcompat
    api project.ext.androidx.appcompat
}
