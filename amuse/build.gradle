apply plugin: 'com.android.library'
apply from: 'config.gradle'

android {
    compileSdkVersion project.ext.android.compileSdkVersion
    buildToolsVersion project.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion project.ext.android.defconfig.minSdkVersion
        targetSdkVersion project.ext.android.defconfig.targetSdkVersion

        versionCode project.ext.android.defconfig.versionCode
        versionName project.ext.android.defconfig.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // To deal with:
        // java.lang.RuntimeException:
        // Unable to get provider android.support.v4.content.FileProvider:
        // java.lang.ClassNotFoundException: android.support.v4.content.FileProvider
        multiDexEnabled project.ext.android.defconfig.multiDexEnabled
        multiDexKeepProguard project.ext.android.defconfig.multiDexKeepProguard


        ndk project.ext.android.defconfig.ndk

        /*ndk {
            abiFilters *//*"armeabi",*//* "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            // version "16.1.4479499"
        }*/

        /*externalNativeBuild {
            cmake {
                cppFlags "-std=c++14", "-fno-exceptions", "-O2"
            }
        }*/

    }


    libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.name}_${defaultConfig.versionName}.aar"
        }
    }


    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation project.ext.dependencies.test.junit
    androidTestImplementation project.ext.androidx.test.extjunit
    androidTestImplementation project.ext.androidx.test.espressocore

    // noinspection GradleCompatible
    // implementation project.ext.android.support.appcompat
    implementation project.ext.androidx.appcompat
}
